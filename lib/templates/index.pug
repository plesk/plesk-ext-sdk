=""
. 
    <?php // Autogenerated by plesk-ext-sdk. Please don't touch it.
    class IndexController extends pm_Controller_Action
    {
        public function indexAction()
        {
            $this->redirect('#{routes[0].path}');
        }

        public function viewAction() {
            $this->_helper->_viewRenderer->setNoRender();

            $baseUrl = \pm_Context::getBaseUrl();
            $moduleId = \pm_Context::getModuleId();
            $params = json_encode([
                'moduleId' => $moduleId,
                'baseUrl' => $baseUrl . 'index.php',
                'locale' => \pm_Locale::getSection('app'),
            ]);

            echo <<<HTML
    <div id="$moduleId"></div>
    <script>
        require(['$baseUrl/dist/main.js'], function (main) {
            main.default($params);
        });
    </script>
    HTML;
        }
    }

    class PleskExt_SDK_ServerList extends Zend_Controller_Action_Helper_Abstract
    {
        public function direct($data)
        {
            $helper = $this->getActionController()->getHelper('Json');
            $request = $this->getRequest();
            $pageSize = $request->getParam('pageSize', 25);
            $pageNumber = $request->getParam('pageNumber', 1);
            $sortColumn = $request->getParam('sortColumn', null);
            $sortDirection = $request->getParam('sortDirection', 'ASC');

            $defaultCallback = function ($params) use ($data) {
                $pageSize = $params['pageSize'];
                $pageNumber = $params['pageNumber'];
                $sortColumn = $params['sortColumn'];
                $sortDirection = $params['sortDirection'];

                if ($sortColumn) {
                    usort($data, function ($a, $b) use ($sortColumn, $sortDirection) {
                        $result = 0;

                        if ($a[$sortColumn] > $b[$sortColumn]) {
                            $result = 1;
                        }

                        if ($a[$sortColumn] < $b[$sortColumn]) {
                            $result = -1;
                        }

                        return $result * ($sortDirection === 'ASC' ? 1 : -1);
                    });
                }

                return [
                    'status' => 'success',
                    'data' => array_slice($data, ($pageNumber - 1) * $pageSize, $pageSize),
                    'totalItems' => count($data),
                ];
            };

            try {
                $callback = is_callable($data) ? $data : $defaultCallback;
                $helper->sendJson(
                    $callback([
                        'pageSize' => $pageSize,
                        'pageNumber' => $pageNumber,
                        'sortColumn' => $sortColumn,
                        'sortDirection' => $sortDirection,
                    ])
                );
            } catch (\pm_Exception $e) {
                $helper->sendJson([
                    'status' => 'error',
                    'errors' => [
                        $e->getMessage(),
                    ],
                ]);
            }
        }
    }

    class PleskExt_SDK_ServerForm extends Zend_Controller_Action_Helper_Abstract
    {
        public function direct($fields, $callback) {
            $helper = $this->getActionController()->getHelper('Json');
            $request = $this->getRequest();

            if (!$request->isPost()) {
                $helper->sendJson([
                    'status' => 'error',
                    'errors' => [
                        'Unavailable access method',
                    ],
                ]);
            }

            $form = new pm_Form_Simple();
            foreach ($fields as $name => $config) {
                $form->addElement('text', $name, $config);
            }

            $data = json_decode($request->getRawBody(), true);
            if (!$form->isValid($data)) {
                $helper->sendJson([
                    'status' => 'error',
                    'errors' => $form->getMessages(),
                ]);
            }

            try {
                $helper->sendJson([
                    'status' => 'success',
                    'data' => $callback($form->getValues()),
                ]);
            } catch (\pm_Exception $e) {
                $helper->sendJson([
                    'status' => 'error',
                    'errors' => [
                        $e->getMessage(),
                    ],
                ]);
            }
        }
    }

    $application = new pm_Application();

    Zend_Controller_Action_HelperBroker::addPrefix('PleskExt_SDK');

    $router = \Zend_Controller_Front::getInstance()->getRouter();
    $router->addConfig(new \Zend_Config([
        'Default' => [
            'route' => ':controller/:action',
        ],

each route, index in routes
    .
        #{index} => [
            'route' => '#{route.path}',
            'defaults' => ['controller' => 'index', 'action' => 'view'],
        ],
.
    ]));

    $application->run();
